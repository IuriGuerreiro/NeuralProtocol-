# Generated by Django 5.2.5 on 2025-09-03 22:33

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_name', models.CharField(blank=True, max_length=255, null=True)),
                ('model_name', models.CharField(default='gemini-2.0-flash', max_length=100)),
                ('provider', models.CharField(default='google_genai', max_length=50)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('error', 'Error'), ('archived', 'Archived')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('approval_mode', models.BooleanField(default=False, help_text='Whether tool approval is required')),
                ('settings', models.JSONField(blank=True, default=dict, help_text='Session-specific settings')),
                ('message_count', models.PositiveIntegerField(default=0)),
                ('total_tokens_used', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chat_sessions',
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('message_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('user', 'User'), ('assistant', 'Assistant'), ('system', 'System'), ('tool', 'Tool')], max_length=20)),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('sequence_number', models.PositiveIntegerField(help_text='Order of message in conversation')),
                ('tokens_used', models.PositiveIntegerField(blank=True, default=0)),
                ('processing_time', models.FloatField(blank=True, help_text='Time in seconds to generate response', null=True)),
                ('model_used', models.CharField(blank=True, max_length=100)),
                ('tools_used', models.JSONField(blank=True, default=list, help_text='List of tools used in this message')),
                ('tool_results', models.JSONField(blank=True, default=dict, help_text='Results from tool executions')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional message metadata')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chat.chatsession')),
            ],
            options={
                'db_table': 'chat_messages',
                'ordering': ['sequence_number'],
            },
        ),
        migrations.CreateModel(
            name='SessionSnapshot',
            fields=[
                ('snapshot_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('session_data', models.JSONField(help_text='Serialized session state')),
                ('messages_data', models.JSONField(help_text='Serialized messages')),
                ('tools_data', models.JSONField(default=list, help_text='Serialized tool executions')),
                ('message_count_at_snapshot', models.PositiveIntegerField(default=0)),
                ('tokens_used_at_snapshot', models.PositiveIntegerField(default=0)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snapshots', to='chat.chatsession')),
            ],
            options={
                'db_table': 'chat_session_snapshots',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ToolExecution',
            fields=[
                ('execution_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tool_name', models.CharField(max_length=100)),
                ('tool_description', models.TextField(blank=True)),
                ('tool_source', models.CharField(blank=True, help_text='MCP server or custom tool source', max_length=100)),
                ('arguments', models.JSONField(default=dict, help_text='Arguments passed to the tool')),
                ('result', models.JSONField(blank=True, default=dict, help_text='Result returned by the tool')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('executing', 'Executing'), ('completed', 'Completed'), ('failed', 'Failed'), ('timeout', 'Timeout')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('execution_time', models.FloatField(blank=True, help_text='Execution time in seconds', null=True)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('requires_approval', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approval_notes', models.TextField(blank=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_tools', to=settings.AUTH_USER_MODEL)),
                ('message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tool_executions', to='chat.message')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tool_executions', to='chat.chatsession')),
            ],
            options={
                'db_table': 'chat_tool_executions',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatAnalytics',
            fields=[
                ('analytics_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(auto_now_add=True)),
                ('sessions_created', models.PositiveIntegerField(default=0)),
                ('messages_sent', models.PositiveIntegerField(default=0)),
                ('messages_received', models.PositiveIntegerField(default=0)),
                ('total_tokens_used', models.PositiveIntegerField(default=0)),
                ('tools_executed', models.PositiveIntegerField(default=0)),
                ('total_session_time', models.PositiveIntegerField(default=0)),
                ('avg_session_time', models.FloatField(default=0.0)),
                ('model_usage', models.JSONField(default=dict, help_text='Usage breakdown by AI model')),
                ('tool_usage', models.JSONField(default=dict, help_text='Usage breakdown by tools')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chat_analytics',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['user', '-date'], name='chat_analyt_user_id_478c0c_idx'), models.Index(fields=['date'], name='chat_analyt_date_769bc3_idx')],
                'constraints': [models.UniqueConstraint(fields=('user', 'date'), name='unique_user_analytics_per_day')],
            },
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['user', '-last_activity'], name='chat_sessio_user_id_2eee2c_idx'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['status', '-created_at'], name='chat_sessio_status_4e91f7_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['session', 'sequence_number'], name='chat_messag_session_3708fa_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['session', 'timestamp'], name='chat_messag_session_4a3fea_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['role', 'timestamp'], name='chat_messag_role_9d5384_idx'),
        ),
        migrations.AddConstraint(
            model_name='message',
            constraint=models.UniqueConstraint(fields=('session', 'sequence_number'), name='unique_sequence_per_session'),
        ),
        migrations.AddIndex(
            model_name='sessionsnapshot',
            index=models.Index(fields=['session', '-created_at'], name='chat_sessio_session_c142b8_idx'),
        ),
        migrations.AddIndex(
            model_name='toolexecution',
            index=models.Index(fields=['session', '-started_at'], name='chat_tool_e_session_b4698c_idx'),
        ),
        migrations.AddIndex(
            model_name='toolexecution',
            index=models.Index(fields=['tool_name', '-started_at'], name='chat_tool_e_tool_na_55bdb2_idx'),
        ),
        migrations.AddIndex(
            model_name='toolexecution',
            index=models.Index(fields=['status', '-started_at'], name='chat_tool_e_status_e14e30_idx'),
        ),
    ]
